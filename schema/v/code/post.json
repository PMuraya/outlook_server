{"url":"undefined","class":"database","cargs":"[\"mutall_contribution\"]","method":"get_sql_data","margs":"[\"\\n            with \\r\\n    #\\r\\n    # Get all the members and all the events that happended  (as a product!)\\r\\n    all_members as (\\r\\n        select \\r\\n            membership.membership,\\r\\n            user.short_name,\\r\\n            event.name as event_name,\\r\\n            event.event,\\r\\n            membership.start_date,\\r\\n            event.date as event_date\\r\\n        from \\r\\n            membership\\r\\n            join event\\r\\n            inner join user on membership.user = user.user\\r\\n    ),\\r\\n    #\\r\\n    # Get all members that contributed to an event (as goo members)\\r\\n    good_members as (\\r\\n        select\\r\\n            contributor.membership,\\r\\n            contribution.event,\\r\\n            #\\r\\n            #\\r\\n            contribution.amount,\\r\\n            'good_members' as status\\r\\n        from contribution\\r\\n            inner join contributor on contributor.event = contribution.event\\r\\n                                    and contribution.contributor = contributor.contributor \\r\\n            \\r\\n    ),\\r\\n    #\\r\\n    # Get the members who did not contribute to an event\\r\\n    non_contributors as (\\r\\n        select\\r\\n            all_members.membership,\\r\\n            all_members.event,\\r\\n            all_members.start_date,\\r\\n            all_members.event_date \\r\\n        from\\r\\n            all_members\\r\\n            left join good_members on good_members.membership = all_members.membership\\r\\n                    and good_members.event = all_members.event \\r\\n            where\\r\\n                good_members.amount is null\\r\\n    ),\\r\\n    #\\r\\n    # Get the members who had not joined when the contributions were made\\r\\n    visitors as(\\r\\n        select \\r\\n            non_contributors.membership,\\r\\n            non_contributors.event,\\r\\n            'visitors' as status\\r\\n        from \\r\\n            non_contributors \\r\\n        where \\r\\n            non_contributors.start_date > non_contributors.event_date\\r\\n          \\r\\n    ),\\r\\n    # Get the beneficiaries for an event\\r\\n    beneficiary as(\\r\\n        select\\r\\n            beneficiary.membership,\\r\\n            beneficiary.event,\\r\\n           'beneficiaries' as status\\r\\n          \\r\\n        from \\r\\n            beneficiary\\r\\n    ),\\r\\n   \\r\\n# Combine the ctes getting the status of all the contributions i.e good members,\\r\\n# visitors, beneficiaries and defaulters\\r\\nstatus as(\\r\\n    select\\r\\n        all_members.short_name,\\r\\n        all_members.event_name,\\r\\n        all_members.membership,\\r\\n        all_members.event,\\r\\n        all_members.event_date,\\r\\n        good_members.amount,\\r\\n        CONCAT_WS(', ',good_members.status, visitors.status, beneficiary.status) AS status\\r\\n    from\\r\\n        all_members\\r\\n        left join good_members on all_members.membership = good_members.membership\\r\\n            and all_members.event = good_members.event\\r\\n        left join visitors on all_members.membership = visitors.membership\\r\\n             and all_members.event = visitors.event\\r\\n        left join beneficiary on all_members.membership = beneficiary.membership\\r\\n            and all_members.event = beneficiary.event\\r\\n),\\r\\n#\\r\\n# For each status type, add a color that will be used to color code the \\r\\n# members based on their contribution\\r\\ncolor as(\\r\\n    select \\r\\n        status.*,\\r\\n            case \\r\\n                when status.status = 'good_members' then 'white'\\r\\n                when status.status = 'beneficiaries' then 'green'\\r\\n                when status.status = 'visitors' then 'yellow'\\r\\n                else 'red'\\r\\n            end as color\\r\\n    from \\r\\n        status\\r\\n),\\r\\n#\\r\\n# Combine the contribution and the colour\\r\\ncombined as(\\r\\n    select\\r\\n        color.short_name,\\r\\n        color.membership as membership,\\r\\n    CONCAT(\\r\\n        YEAR(color.event_date),\\r\\n        '_',\\r\\n        MONTH(color.event_date),\\r\\n        '_',\\r\\n        color.event_name\\r\\n    ) AS event_name,\\r\\n         json_object('value',color.amount, 'color',color.color) as contribution\\r\\n    from\\r\\n        color\\r\\n), \\n\\n        measurements as (\\n            select \\n                `event_name`, `membership`, `short_name`, \\n                'contribution' as measurement,\\n                contribution as value \\n            from combined\\n        ),\\n\\n            crown as (\\n                select \\n                    measurements.* \\n                from measurements \\n                 where measurement='contribution'\\n\\t)\\n,\\n\\n                crumb as (\\n                select\\n                    crown.*,\\n                    json_object(\\n                        'id', concat_ws('_', event_name),\\n                        'value',value\\n                    ) as value2\\n                 from crown    \\n            ),\\n\\n            crest as (\\n                select \\n                    membership, short_name, \\n                    json_arrayagg(value2) as raw_values  \\n                    , round(sum(value->>'$.value'),0) as sum, round(count(value->>'$.value'),0) as count, round(avg(value->>'$.value'),0) as avg\\n                from \\n                    crumb \\n                    group by membership, short_name\\n            )\\n,\\n\\n                bottom as (\\n                 select\\n                    json_object(\\n                        'sum',round(sum(value->>'$.value'),0), 'count',round(count(value->>'$.value'),0), 'avg',round(avg(value->>'$.value'),0)\\n                    ) as summaries,\\n                    concat_ws('_', event_name) as id  \\n                 from crown\\n                group by concat_ws('_', event_name)    \\n            )\\n\\n            select * from crest limit 200 offset 0\"]"}